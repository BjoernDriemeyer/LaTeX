\tikzset{%
	% Self defined bulding blocks. 
	% Nevertheless circutikz has implemented filters, couplers and other components since version 0.4, they are mostly implemented as bipoles.
	% The usage of bipoles: \draw (start) to[lowpass/amp/adc,....] (end).
	% The problem is, that if one wants to use arrows, the arrows in bipoles can not be sat manual (fixed in circuitikz source) AND THEY ARE NOT CONSISTENT
	% Also it's quite a mess, which component is a monopole, simple block, bipol, quad/triple etc
	% Following are a few examples on how to define your own blocks. 
	%
	% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
	% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
	% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
	% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
	%
	% Standard block definition, the width and height is adopted from the circutizk source code, so don't mind the strange values. Also the linewidth is set according to the circutrikz source code.
	block/.style    	= 	{draw, fill=white, thick, rectangle, minimum height = 0.98cm, minimum width = 0.98cm, node distance=2.5cm, line width=1.5pt},
	%
	% Standard circular block
	circleblock/.style	= 	{draw, fill=white, thick, circle, minimum width = 0.98cm,  line width=1.5pt, node distance=2.5cm},
	%
	% Label for circuitikz nodes, as they're reference is in the middle and not on the outer edge of the node....
	circuitikzlabel/.style	=	{label={[label, label distance=0.5cm]#1}},
	%
	%
	%
	% VCO/Oscillator 
	myVCO/.style			= 	{circleblock, path picture={%
		\draw[line width=0.75pt] 	($(path picture bounding box.west)+(0.09cm,0)$) sin ($(path picture bounding box.center)-(0.2cm,-0.2cm)$) cos  (path picture bounding box.center) sin ($(path picture bounding box.center)-(-0.2cm,0.2cm)$) cos ($(path picture bounding box.east)-(0.09cm,0)$);
		}
	},
	% Amplifier, as circuitikz does only provite amplifiers as 2-ports/bipoles
	myAMP/.style		= 	{block, node distance=2.5cm, path picture={%
		\draw[fill=white, line width=0.75pt] ($(path picture bounding box.center)+(0.7em,0)$) -- ($(path picture bounding box.center)-(0.7em,-0.7em)$) -- ($(path picture bounding box.center)-(0.7em,0.7em)$)  -- cycle;
		}
	},
	% Block	
	myBlock/.style    	= 	{draw, fill=white, thick, rectangle, minimum height = 0.98cm, minimum width = 0.98cm, node distance=2.5cm, line width=1.5pt},
	% Same for ADC
	myADC/.style 	=	{block, path picture={%
		\draw[line width=0.75pt] 	(path picture bounding box.south west) -- (path picture bounding box.north east);
		\node[] at ($(path picture bounding box.center)+(-.5em,.5em)$) () {D};
		\node[] at ($(path picture bounding box.center)+(.5em,-.5em)$) () {A};
		} 
	},
	% Same for filters
	myLP/.style	=	{block, path picture={%
		%Sine-Waves
		\draw[line width=.75pt] 	($(path picture bounding box.west)+(0.3em,0)$) sin ($(path picture bounding box.center)-(0.50em,-0.3em)$) cos  (path picture bounding box.center) sin ($(path picture bounding box.center)-(-0.50em,0.3em)$) cos ($(path picture bounding box.east)-(0.3em,0)$);
		\draw[line width=0.75pt] 	($(path picture bounding box.west)+(0.3em,-0.65em)$) sin ($(path picture bounding box.center)-(0.50em,0.35em)$) cos  ( $(path picture bounding box.center)-(0,0.65em)$) sin ($(path picture bounding box.center)-(-0.50em,0.95em)$) cos ($(path picture bounding box.east)-(0.3em,0.65em)$);
		\draw[line width=0.75pt] 	($(path picture bounding box.west)+(0.3em,0.65em)$) sin ($(path picture bounding box.center)-(0.50em,-0.95em)$) cos  ( $(path picture bounding box.center)+(0,0.65em)$) sin ($(path picture bounding box.center)-(-0.50em,-0.35em)$) cos ($(path picture bounding box.east)-(0.3em,-0.65em)$);
		% Cancelation
		\draw[line width=0.75pt] 	($(path picture bounding box.center)-(0.2em,0.2em)$) -- (path picture bounding box.center) -- ($(path picture bounding box.center)+(0.2em,0.2em)$) ;
		\draw[line width=0.75pt] 	($(path picture bounding box.center)-(0.2em,-0.45em)$) -- ($(path picture bounding box.center)+(0,0.65em)$) -- ($(path picture bounding box.center)+(0.2em,0.85em)$) ;
		}
	},
}
\begin{tikzpicture}[line width=0.7pt,>=latex,node distance=2.5cm]
	% First: All building blocks are placed relative to the first component
	\draw (0,0)
		node[myBlock, label={below:Block}] (Sender) {$P_{S}$}
		node[circulator, below right of=Sender, rotate=90] (circi) {}
		node[antenna, right of = circi] (antennaa) {}
		node[mixer, below left of=circi, circuitikzlabel={below:Mischer}] (Mischer) {}
		node[myLP, left of=Mischer, label={below:Tiefpass}] (Tiefpass) {}
		node[myADC, left of=Tiefpass] (AD-Wandler) {};

	\draw[->] (Sender.east) -| (circi.2);
	\draw[->] (circi.3) -| (antennaa);		
	\draw[->] (circi.1) |- (Mischer.east);		
	\draw[->] (Sender.south) -- (Mischer.north);
	\draw[->] (Mischer.west) -- (Tiefpass.east);
	\draw[->] (Tiefpass.west) -- (AD-Wandler.east);

		
		
		
		% As the coupler ports are not in the middle, based on the size (again extraceted from circutikz source code), an yshift is perfomed to have the input on the same height as the output of the oszillator. The xshift is used to place the VCO and ADC on the same y-value after all.
		%node[coupler, right of=Sender, yshift=-0.455cm, xshift=1cm] (coupler) {}
		% Undo the yshift as the output of the coupler is on the same height as the input of the amplifier
		%node[myAMP, right of=coupler, yshift=0.455cm, node distance=4cm, label={below:PA}] (pa) {}
		% Circulator is rotated that the ports are on the correct position, normally ports are arranged as follows:
		% 
		%				  o------------o
		%						|
		%						o
		%node[circulator, below right of=pa, rotate=90] (circ) {}
		%node[antenna, right of = circ] (antenna) {}
		%node[myAMP, below left of=circ, rotate=180, label={LNA}] (lna) {}
		% Used redefinition of label, otherwise the label would be overlapping with the mixer shape
		%node[mixer, left of=lna, circuitikzlabel={below:mixer}] (mixer) {}
		%node[myLP, left of=mixer, label={below:lowpass}] (lowpass) {}
		%node[myADC, left of=lowpass] (adc) {};
	
	% Connect everything together
	
		
%	\draw[->] (Sender) -- (coupler.4);
%	\draw[->] (coupler.3) -- (pa.west);
	% Match is placed relative to coupler port, yscale=-1 mirrors the component at the y-axis
%	\draw[] (coupler.1) -| ++(-0.5cm,-0.1cm) node[match, rotate=-90, yscale=-1] {};
%	\draw[->] (pa.east) -| (circ.2);
%	\draw[-] (circ.3) -- (antenna);
%	\draw[->] (circ.1) |- (lna.west);
%	\draw[->] (lna.east) -- (mixer.east);
%	\draw[->] (coupler.2) -| (mixer.north);
%	\draw[->] (mixer.west)  -- (lowpass.east);
%	\draw[->] (lowpass.west) -- (adc.east);
\end{tikzpicture}
